/*-------------------------------------
 *	BUTTONS MASTER STYLES
 *-------------------------------------
 *
 *	Stylesheet dedicated to all button
 *	styles including colour and typography
 *
/-------------------------------------*/

/* Base Button */
.mdev-btn {
  width: auto;
  padding: .7vw 1vw;
  display: inline-block;
  text-transform: uppercase;
  font-weight: 500;
  cursor: pointer;
  transition: all .4s;
  position: relative;
  vertical-align: middle;

  &:before,
  &:after {
    @include pseudo();
    width: 100%;
    height: 100%;
  }

  &:before {
    top: 0;
    left: 0;
  }

  &:after {
    bottom: 0;
    right: 0;
  }

  @media #{$portrait} {
    padding: 2vw 2.3vw;
  }

  @media #{$tablet-lnd-only} {
    padding: 1vw 1.3vw;
  }

  @media #{$phone-only} {
    padding: 4vw 4.3vw;
    letter-spacing: 1px;
  }
}

/* Button Colors */

.mdev-primary-btn {
  opacity: 0;
  color: $white;
  background: transparent;
  font-size: 1.1vw;
  transition: color .5s, background .5s, opacity .8s;

  &:hover {
    color: $color-brand-bkg;
    background: $color-brand-accent;
  }

  @media #{$portrait} {
    font-size: 2.9vw;
  }

  @media #{$tablet-lnd-only} {
    font-size: 2vw;
  }

  @media #{$phone-only} {
    font-size: 4.3vw;
  }

  &:before,
  &:after {
    border: 2px solid transparent;
    width: 0;
    height: 0;
  }
}

$border-time: .4s;
// Utilizing the vue-in-viewport-directive Package
.mdev-primary-btn.fully-in-viewport,
.mdev-primary-btn.above-viewport {
  opacity: 1;

  &:before,
  &:after {
    width: 100%;
    height: 100%;
  }

  // Draw in Top Right lines first
  &:before {
    border-top-color: $color-brand-accent;
    border-right-color: $color-brand-accent;
    transition: width $border-time ease-out,
                height $border-time ease-out $border-time;
  }

  // Draw in Bottom Left lines after
  // This is why border time is multiplied.
  &:after {
    border-bottom-color: $color-brand-accent;
    border-left-color: $color-brand-accent;
    transition: border-color 0s ease-out ($border-time * 2),
                width $border-time ease-out ($border-time * 2),
                height $border-time ease-out ($border-time * 3);
  }
}
